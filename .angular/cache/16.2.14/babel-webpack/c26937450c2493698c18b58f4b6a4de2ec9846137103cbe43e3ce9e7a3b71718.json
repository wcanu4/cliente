{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MensajeTagService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000'; // URL base del servidor\n  }\n  // Método para obtener mensajes por etiqueta\n  getMessagesByTag(tag) {\n    return this.http.get(`${this.baseUrl}/messages/${tag}`);\n  }\n  static #_ = this.ɵfac = function MensajeTagService_Factory(t) {\n    return new (t || MensajeTagService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MensajeTagService,\n    factory: MensajeTagService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["MensajeTagService","constructor","http","baseUrl","getMessagesByTag","tag","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\CANU\\Desktop\\cliente\\src\\app\\mensaje-tag.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MensajeTagService {\n\n  private baseUrl = 'http://localhost:3000'; // URL base del servidor\n\n  constructor(private http: HttpClient) {}\n\n  // Método para obtener mensajes por etiqueta\n  getMessagesByTag(tag: string): Observable<any> {\n      return this.http.get(`${this.baseUrl}/messages/${tag}`);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,iBAAiB;EAI5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,uBAAuB,CAAC,CAAC;EAEJ;EAEvC;EACAC,gBAAgBA,CAACC,GAAW;IACxB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,aAAaE,GAAG,EAAE,CAAC;EAC3D;EAAC,QAAAE,CAAA,G;qBATUP,iBAAiB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBZ,iBAAiB;IAAAa,OAAA,EAAjBb,iBAAiB,CAAAc,IAAA;IAAAC,UAAA,EAFhB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}