{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MensajeIdComponent = class MensajeIdComponent {\n  constructor(mensajeIdService) {\n    this.mensajeIdService = mensajeIdService;\n    this.messageId = '';\n    this.message = null;\n    this.errorMessage = null;\n  }\n  obtenerMensaje() {\n    this.mensajeIdService.getMessageById(this.messageId).subscribe(response => {\n      this.message = response; // Almacena el mensaje recibido\n      this.errorMessage = null; // Borra el mensaje de error si existe\n    }, error => {\n      this.errorMessage = 'Error al obtener el mensaje'; // Asigna el mensaje de error\n      this.message = null; // Borra el mensaje si hay error\n    });\n  }\n};\n\nMensajeIdComponent = __decorate([Component({\n  selector: 'app-mensaje-id',\n  templateUrl: './mensaje-id.component.html',\n  styleUrls: ['./mensaje-id.component.css']\n})], MensajeIdComponent);","map":{"version":3,"names":["Component","MensajeIdComponent","constructor","mensajeIdService","messageId","message","errorMessage","obtenerMensaje","getMessageById","subscribe","response","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\23rcr\\Desktop\\PROYECTO FINCA\\credenciales-app\\src\\app\\mensaje-id\\mensaje-id.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MensajeIdService } from '../mensaje-id.service';\n\n@Component({\n  selector: 'app-mensaje-id',\n  templateUrl: './mensaje-id.component.html',\n  styleUrls: ['./mensaje-id.component.css']\n})\nexport class MensajeIdComponent {\n  messageId: string = '';\n  message: any = null;\n  errorMessage: string | null = null;\n\n  constructor(private mensajeIdService: MensajeIdService) {}\n\n  obtenerMensaje(): void {\n    this.mensajeIdService.getMessageById(this.messageId)\n      .subscribe(\n        response => {\n          this.message = response; // Almacena el mensaje recibido\n          this.errorMessage = null; // Borra el mensaje de error si existe\n        },\n        error => {\n          this.errorMessage = 'Error al obtener el mensaje'; // Asigna el mensaje de error\n          this.message = null; // Borra el mensaje si hay error\n        }\n      );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAK7BC,YAAoBC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IAJpC,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,OAAO,GAAQ,IAAI;IACnB,KAAAC,YAAY,GAAkB,IAAI;EAEuB;EAEzDC,cAAcA,CAAA;IACZ,IAAI,CAACJ,gBAAgB,CAACK,cAAc,CAAC,IAAI,CAACJ,SAAS,CAAC,CACjDK,SAAS,CACRC,QAAQ,IAAG;MACT,IAAI,CAACL,OAAO,GAAGK,QAAQ,CAAC,CAAC;MACzB,IAAI,CAACJ,YAAY,GAAG,IAAI,CAAC,CAAC;IAC5B,CAAC,EACDK,KAAK,IAAG;MACN,IAAI,CAACL,YAAY,GAAG,6BAA6B,CAAC,CAAC;MACnD,IAAI,CAACD,OAAO,GAAG,IAAI,CAAC,CAAC;IACvB,CAAC,CACF;EACL;CACD;;AApBYJ,kBAAkB,GAAAW,UAAA,EAL9BZ,SAAS,CAAC;EACTa,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWd,kBAAkB,CAoB9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}