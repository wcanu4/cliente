{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../mensaje-tag.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction MensajeTagComponent_div_10_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"p\")(2, \"strong\");\n    i0.ɵɵtext(3, \"Mensaje:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Tags:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r3 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", message_r3.msg, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", message_r3.tags.join(\", \"), \"\");\n  }\n}\nfunction MensajeTagComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Mensajes recibidos:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, MensajeTagComponent_div_10_li_4_Template, 9, 2, \"li\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.messages);\n  }\n}\nfunction MensajeTagComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage, \" \");\n  }\n}\nexport class MensajeTagComponent {\n  constructor(mensajeTagService) {\n    this.mensajeTagService = mensajeTagService;\n    this.tag = ''; // Almacena la etiqueta ingresada por el usuario\n    this.messages = []; // Almacena los mensajes obtenidos\n    this.errorMessage = null; // Almacena mensajes de error\n  }\n\n  obtenerMensajes() {\n    // Restablecer mensajes y error antes de cada solicitud\n    this.messages = [];\n    this.errorMessage = null;\n    // Llamar al servicio para obtener mensajes por etiqueta\n    this.mensajeTagService.getMessagesByTag(this.tag).subscribe(response => {\n      // Almacenar los mensajes recibidos\n      this.messages = response;\n    }, error => {\n      // Almacenar mensaje de error\n      this.errorMessage = 'Error al obtener los mensajes';\n    });\n  }\n  static #_ = this.ɵfac = function MensajeTagComponent_Factory(t) {\n    return new (t || MensajeTagComponent)(i0.ɵɵdirectiveInject(i1.MensajeTagService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MensajeTagComponent,\n    selectors: [[\"app-mensaje-tag\"]],\n    decls: 12,\n    vars: 3,\n    consts: [[3, \"ngSubmit\"], [\"for\", \"tag\"], [\"id\", \"tag\", \"name\", \"tag\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n    template: function MensajeTagComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Obtener mensajes por etiqueta\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function MensajeTagComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.obtenerMensajes();\n        });\n        i0.ɵɵelementStart(4, \"div\")(5, \"label\", 1);\n        i0.ɵɵtext(6, \"Etiqueta:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function MensajeTagComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.tag = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"button\", 3);\n        i0.ɵɵtext(9, \"Obtener mensajes\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(10, MensajeTagComponent_div_10_Template, 5, 1, \"div\", 4);\n        i0.ɵɵtemplate(11, MensajeTagComponent_div_11_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.tag);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.messages.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","message_r3","msg","tags","join","ɵɵtemplate","MensajeTagComponent_div_10_li_4_Template","ɵɵproperty","ctx_r0","messages","ctx_r1","errorMessage","MensajeTagComponent","constructor","mensajeTagService","tag","obtenerMensajes","getMessagesByTag","subscribe","response","error","_","ɵɵdirectiveInject","i1","MensajeTagService","_2","selectors","decls","vars","consts","template","MensajeTagComponent_Template","rf","ctx","ɵɵlistener","MensajeTagComponent_Template_form_ngSubmit_3_listener","MensajeTagComponent_Template_input_ngModelChange_7_listener","$event","MensajeTagComponent_div_10_Template","MensajeTagComponent_div_11_Template","length"],"sources":["C:\\Users\\23rcr\\Desktop\\PROYECTO FINCA\\credenciales-app\\src\\app\\mensaje-tag\\mensaje-tag.component.ts","C:\\Users\\23rcr\\Desktop\\PROYECTO FINCA\\credenciales-app\\src\\app\\mensaje-tag\\mensaje-tag.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MensajeTagService } from '../mensaje-tag.service';\n\n@Component({\n  selector: 'app-mensaje-tag',\n  templateUrl: './mensaje-tag.component.html',\n  styleUrls: ['./mensaje-tag.component.css']\n})\nexport class MensajeTagComponent {\n  tag: string = ''; // Almacena la etiqueta ingresada por el usuario\n  messages: any[] = []; // Almacena los mensajes obtenidos\n  errorMessage: string | null = null; // Almacena mensajes de error\n\n  constructor(private mensajeTagService: MensajeTagService) {}\n\n  obtenerMensajes(): void {\n      // Restablecer mensajes y error antes de cada solicitud\n      this.messages = [];\n      this.errorMessage = null;\n\n      // Llamar al servicio para obtener mensajes por etiqueta\n      this.mensajeTagService.getMessagesByTag(this.tag)\n          .subscribe(\n              response => {\n                  // Almacenar los mensajes recibidos\n                  this.messages = response;\n              },\n              error => {\n                  // Almacenar mensaje de error\n                  this.errorMessage = 'Error al obtener los mensajes';\n              }\n          );\n  }\n}\n","<div>\n    <h2>Obtener mensajes por etiqueta</h2>\n    <form (ngSubmit)=\"obtenerMensajes()\">\n      <div>\n        <label for=\"tag\">Etiqueta:</label>\n        <input id=\"tag\" [(ngModel)]=\"tag\" name=\"tag\" required />\n      </div>\n      <button type=\"submit\">Obtener mensajes</button>\n    </form>\n    \n    <!-- Mostrar mensajes -->\n    <div *ngIf=\"messages.length > 0\">\n      <h3>Mensajes recibidos:</h3>\n      <ul>\n        <li *ngFor=\"let message of messages\">\n          <p><strong>Mensaje:</strong> {{ message.msg }}</p>\n          <p><strong>Tags:</strong> {{ message.tags.join(', ') }}</p>\n        </li>\n      </ul>\n    </div>\n    \n    <!-- Mostrar mensaje de error -->\n    <div *ngIf=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">\n      {{ errorMessage }}\n    </div>\n  </div>\n  \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}