{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MensajeIdService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000'; // URL base del servidor\n  }\n  // Método para obtener un mensaje por ID\n  getMessageById(id) {\n    return this.http.get(`${this.baseUrl}/message/${id}`);\n  }\n  static #_ = this.ɵfac = function MensajeIdService_Factory(t) {\n    return new (t || MensajeIdService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MensajeIdService,\n    factory: MensajeIdService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["MensajeIdService","constructor","http","baseUrl","getMessageById","id","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\CANU\\Desktop\\cliente\\src\\app\\mensaje-id.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MensajeIdService {\n\n  private baseUrl = 'http://localhost:3000'; // URL base del servidor\n\n  constructor(private http: HttpClient) {}\n\n  // Método para obtener un mensaje por ID\n  getMessageById(id: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/message/${id}`);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,uBAAuB,CAAC,CAAC;EAEJ;EAEvC;EACAC,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,YAAYE,EAAE,EAAE,CAAC;EACvD;EAAC,QAAAE,CAAA,G;qBATUP,gBAAgB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBZ,gBAAgB;IAAAa,OAAA,EAAhBb,gBAAgB,CAAAc,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}